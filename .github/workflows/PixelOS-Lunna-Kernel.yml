name: Build Pixel Lunna Kernel

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%y%m%d")" >> $GITHUB_ENV
        echo "BUILD_TIME_1=$(TZ=Asia/Shanghai date "+%Y-%m-%d")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib bzip2 libbz2-dev liblz4-tool make squashfs-tools dpkg-dev libssl-dev python2 python3 bc libc6-dev-i386 libncurses5-dev
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace
    
    - name: Download Clang-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r522817.tar.gz
        tar -C clang-aosp/ -zxvf clang-r522817.tar.gz

    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --recursive https://github.com/Slimreaper02/kernel_oneplus_sm8350 -b fifteen android-kernel --depth=1
        git clone --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git -b kernel-5.4 susfs4ksu
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/scripts
        sed -i 's/ -dirty//g' setlocalversion
        cd $GITHUB_WORKSPACE/patches
        sed -i '1687 r path_umount.c' $GITHUB_WORKSPACE/kernel_workspace/android-kernel/fs/namespace.c                                                                                 
    
    - name: Setup rsuntk KernelSU
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash -s main
        KSU_VERSION=$(cd KernelSU && expr $(/usr/bin/git rev-list --count HEAD) + 10200)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

    - name: Setup SUSFS Patches
      working-directory: ${{ env.KERNEL_WORKSPACE }}/${{ env.KERNEL_SOURCE_DIR }}
      run: |
        set -euxo pipefail
        # Print directory structure for debugging
        ls -R
        # Define patch locations relative to the current working directory (kernel source root)
        SUSFS_PATCH_DIR="../susfs4ksu/kernel_patches"
        OTHER_PATCH_DIR="../kernel_patches"
        PATCHES_DIR="${GITHUB_WORKSPACE}/patches"
        KSU_NEXT_DIR="KernelSU-Next"
    
        # Check if patch directories exist
        if [ ! -d "$SUSFS_PATCH_DIR" ]; then echo "Error: SUSFS patch directory not found at $SUSFS_PATCH_DIR"; exit 1; fi
        if [ ! -d "$OTHER_PATCH_DIR" ]; then echo "Error: Other patch directory not found at $OTHER_PATCH_DIR"; exit 1; fi
        if [ ! -d "$PATCHES_DIR" ]; then echo "Error: Patches directory not found at $PATCHES_DIR"; exit 1; fi
        if [ ! -d "$KSU_NEXT_DIR" ]; then echo "Error: KernelSU-Next directory not found at $KSU_NEXT_DIR"; exit 1; fi
    
        # Create target directories if they don't exist
        mkdir -p ./fs ./include/linux
    
        # Copy SUSFS files
        cp "${SUSFS_PATCH_DIR}/fs/"* ./fs/ || echo "Warning: Failed to copy SUSFS fs files."
        cp "${SUSFS_PATCH_DIR}/include/linux/"* ./include/linux/ || echo "Warning: Failed to copy SUSFS include/linux files."
    
        # Copy specific patches to workspace
        cp "${SUSFS_PATCH_DIR}/50_add_susfs_in_kernel-5.4.patch" ./ || echo "Warning: Failed to copy 50_add_susfs..."
        cp "${OTHER_PATCH_DIR}/69_hide_stuff.patch" ./ || echo "Warning: Failed to copy 69_hide_stuff..."
        cp "${OTHER_PATCH_DIR}/next/next_hooks.patch" ./ || echo "Warning: Failed to copy next_hooks..."
        cp "${OTHER_PATCH_DIR}/next/syscall_hooks.patch" ./ || echo "Warning: Failed to copy syscall_hooks..."
    
        # NEW: Copy and apply the path_umount patch from top-level patches directory
        cp "${PATCHES_DIR}/add_path_umount.patch" ./ || echo "Warning: Failed to copy add_path_umount.patch"
        patch -p1 --forward --fuzz=3 < add_path_umount.patch || echo "Warning: path_umount patch may have failed or already been applied."
    
        # Apply other patches
        patch -p1 --forward --fuzz=3 < syscall_hooks.patch || echo "Warning: syscall_hooks.patch may have failed or been applied."
        patch -p1 --forward --fuzz=3 < 50_add_susfs_in_kernel-5.4.patch || echo "Warning: 50_add_susfs patch may have failed or been applied."
        patch -p1 --forward --fuzz=3 < 69_hide_stuff.patch || echo "Warning: 69_hide_stuff patch may have failed or been applied."
    
        # Clean up copied patch files
        rm -f syscall_hooks.patch next_hooks.patch 50_add_susfs_in_kernel-5.4.patch 69_hide_stuff.patch add_path_umount.patch
    
      shell: bash

    - name: Build kernel for lunaa
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export ARCH=arm64
        export SUBARCH=arm64
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$PATH
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu-"
        EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"
        DEFCONFIG="vendor/lahaina-qgki_defconfig vendor/oplus_yupik_QGKI.config"
        make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD $DEFCONFIG
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD

    - name: Check a kernel output files
      run: |
       cd $GITHUB_WORKSPACE/kernel_workspace
       if [ -f android-kernel/out/arch/arm64/boot/Image ]; then
           echo "CHECK_IMAGE=true" >> $GITHUB_ENV
       else
           echo "Kernel output file is empty"
           exit 1
       fi

    - name: Make Anykernel3
      if: env.CHECK_IMAGE == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/osm0sis/AnyKernel3 --depth=1 AnyKernel3
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/IS_SLOT_DEVICE=0;/IS_SLOT_DEVICE=auto;/g' AnyKernel3/anykernel.sh
        cp android-kernel/out/arch/arm64/boot/Image AnyKernel3/
        rm -rf AnyKernel3/.git* AnyKernel3/README.md

    - name: Upload image of lunaa
      if: env.CHECK_IMAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: Image-lunaa-${{ env.KSUVER }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/Image

    - name: Upload AnyKernel3 of lunaa
      if: env.CHECK_IMAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: AK3-PixelOS-lunaa-KSU-Next-${{ env.KSUVER }}-${{ env.BUILD_TIME }}
        path: kernel_workspace/AnyKernel3/*
